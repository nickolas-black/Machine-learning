# -*- coding: utf-8 -*-
"""01_ML_Simple_dataset.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gEHSU2DExqKDSkqd8AA07n6T3_REeMTV

# Простой пример на синтетических данных
"""

import numpy as np
import matplotlib.pyplot as plt
from sklearn.datasets import make_gaussian_quantiles

# Construct dataset
X1, y1 = make_gaussian_quantiles(mean=(3, 1), cov=2.,
                                 n_samples=200, n_features=2,
                                 n_classes=1, random_state=1) # blue
X2, y2 = make_gaussian_quantiles(mean=(1, 3), cov=2.5,
                                 n_samples=200, n_features=2,
                                 n_classes=1, random_state=1) # red

y1

print(type(X1), X1.shape)

X = np.concatenate((X1, X2))
y = np.concatenate((y1, - y2 + 1))

print(y[199],y[201])

print(X[199],X[201])

print(type(X), X.shape)

feats = X
target = y

f, ax = plt.subplots(1)
for i in np.unique(target):
    mask = target == i
    plt.scatter(feats[mask, 0], feats[mask, 1], label=i)
ax.legend()

"""##### Предсказание по одному новому значению"""

from sklearn.neighbors import KNeighborsClassifier

model = KNeighborsClassifier(n_neighbors=18)

model.fit(X,y)

#Predict Output
predicted= model.predict([[4,0]])
print(predicted)

"""## Train-test split"""

from sklearn.model_selection import train_test_split

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=42)

print(X_train.shape, y_train.shape)
print(X_test.shape, y_test.shape)

X_train[:20]

y_train[:20]

"""##### Обучаемся на данных train"""

from IPython.display import Image
Image(filename='metrics.png')

"""$N = 1$ - количество соседей

$v = (2,2,2) - \text{ red or blue?}$

$v_1 = (-3,2,1) - \text{ red}$

$v_2 = (-1,2,3) - \text{ blue}$

$v_3 = (4,4,3) - \text{ red}$

Метрика "euclidian":

$euc(v, v_1) = \sqrt{(2-(-3))^2 + (2-2)^2+(2-1)^2} = \sqrt{26}$

$euc(v, v_2) = \sqrt{(2-(-1))^2 + (2-2)^2+(2-3)^2} = \sqrt{10}$

$euc(v, v_3) = \sqrt{(2-4)^2 + (2-4)^2+(2-3)^2} = \sqrt{9}$

ОТВЕТ: red

Метрика "manhatan":

$man(v, v_1) = |2-(-3)| + |2-2|+|2-1| = 6$

$man(v, v_2) = |2-(-1)| + |2-2|+|2-3| = 4$

$man(v, v_3) = |2-4| + |2-4|+|2-3| = 5$

ОТВЕТ: blue
"""

model = KNeighborsClassifier(n_neighbors=18, metric='euclidean') #'euclidean'
model.fit(X_train,y_train)

y_pred = model.predict(X_test)

y_pred

y_test

from sklearn.metrics import accuracy_score, balanced_accuracy_score

print('Accuracy: ',accuracy_score(y_test, y_pred), accuracy_score(y_test, y_pred, normalize=False))

"""## Cross-validation"""

from sklearn.model_selection import cross_val_score
from sklearn.model_selection import KFold


for i in range(1,20):
    
    model = KNeighborsClassifier(n_neighbors=i, metric='euclidean') ##bevdvwww
    
    fold = KFold(n_splits=5, shuffle=True, random_state=5)
    scores = cross_val_score(estimator = model,X=X_train, y=y_train,cv=fold)
    print(scores)

print(scores)

print(scores.mean())

"""#### Метрики
https://scikit-learn.org/stable/modules/generated/sklearn.neighbors.DistanceMetric
"""