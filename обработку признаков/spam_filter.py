# -*- coding: utf-8 -*-
"""Spam-filter.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BrYDHri8_q1xpFBPr0dRGRNFSQEqOG-r

### Пример спам-фильтра
"""

# creating word dictionary
def make_Dictionary(train_dir):
    emails = [os.path.join(train_dir,f) for f in os.listdir(train_dir)]    
    all_words = []       
    for mail in emails:    
        with open(mail) as m:
            for i,line in enumerate(m):
                if i == 2:  #Body of email is only 3rd line of text file
                    words = line.split()
                    all_words += words
    dictionary = Counter(all_words)
    
    list_to_remove = list(dictionary.keys())
    for item in list_to_remove:
        if item.isalpha() == False: 
            del dictionary[item]
        elif len(item) == 1:
            del dictionary[item]
    dictionary = dictionary.most_common(3000)
    return dictionary

def extract_features(mail_dir): 
    files = [os.path.join(mail_dir,fi) for fi in os.listdir(mail_dir)]
    features_matrix = np.zeros((len(files),3000))
    docID = 0;
    for fil in files:
        with open(fil) as fi:
            for i,line in enumerate(fi):
                if i == 2:
                    words = line.split()
                    for word in words:
                            wordID = 0
                            for i,d in enumerate(dictionary):
                                if d[0] == word:
                                    wordID = i
                                    features_matrix[docID,wordID] = words.count(word)
            docID = docID + 1     
    return features_matrix

# training the classifiers
import os
import numpy as np
from collections import Counter

# Create a dictionary of words with its frequency
train_dir = 'train-mails'
dictionary = make_Dictionary(train_dir)

type(dictionary[0])

print(dictionary[:5])

# Prepare feature vectors per training mail and its labels
y_train = np.zeros(702) # y_train
y_train[351:701] = 1
train_matrix = extract_features(train_dir)
# Bag Of Words
# I like machine learning

#dictionary: 
#i - 1, like - 2, dog - 3, cat - 4, machine - 5, learning - 6
# (I like machine learning) ----->>>>>>> (1,1,0,0,1,1)
# (I like machine learning and i am too) ------->>>>> (2,1,0,0,1,1)

print(type(train_matrix),train_matrix.shape)

# Training SVM and Naive bayes classifier
from sklearn.naive_bayes import MultinomialNB, GaussianNB, BernoulliNB
from sklearn.neighbors import KNeighborsClassifier

n_neighbors = 10

model1 = MultinomialNB()
model2 = KNeighborsClassifier(n_neighbors)
model1.fit(train_matrix,y_train)
model2.fit(train_matrix,y_train)

# Test the unseen mails for Spam
test_dir = 'test-mails'
test_matrix = extract_features(test_dir)
y_test = np.zeros(260)
y_test[130:260] = 1

from sklearn.metrics import confusion_matrix, accuracy_score
result1 = model1.predict(test_matrix)
result2 = model2.predict(test_matrix)
print(confusion_matrix(y_test,result1), accuracy_score(y_test,result1))
print(confusion_matrix(y_test,result2), accuracy_score(y_test,result2))