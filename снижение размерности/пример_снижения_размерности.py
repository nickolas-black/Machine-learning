# -*- coding: utf-8 -*-
"""Re.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10JQ4hfSNtfHwgEW6l3ZWSuABs_4g6c8V
"""

import re

text = "100 ИНФ 8(903)6174741 Информатика abc@mail +7(903)6174731 213 МАТ abc@.mail.ru 1.1.91 89036174739 1.1.1991 Математика 1.11.1991 +79036174740 cnn@gmail.com 21.01.1991 156 АНГ  Английский 89036174738 nn@gmail.com"
print(type(text))
print(text)

text.split()

# Разделит текст по 1 или более пробелами  
re.split('\s+', text)  
# или

regex = re.compile('\s+') # \s соответствует любому символу пробела
regex.split(text)

regex = re.compile('\d+') # \d соответствует цифре
regex.split(text)

"""**SEARCH and FINDALL and FINDITER**"""

re.search(r'\d{11}', text) # находит первый объект

print(re.search(r'\d{12}', text))

# скомпилируйте regex и найдите шаблоны
regex_num = re.compile('\d{11}')

s = regex_num.search(text)  
print('Первый индекс: ', s.start())  
print('Последний индекс: ', s.end())  
print(text[s.start():s.end()])

for m in re.finditer('\d{11}', text): 
    print('Номер', m[0], 'начинается с позиции', m.start())

type(re.finditer('\d{11}', text))

#findall 
regex_num.findall(text)

"""Шаблон для выделения даты"""

text = "100 01/21/1991 ИНФ 21.123757 8(903)6174741 Информатика abc@mail +7(903)6174731 213 МАТ abc@.mail.ru 1.1.91 89036174739 1.1.1991 Математика 1.11.1991 +79036174740 cnn@gmail.com 21.01.1991 156 АНГ  Английский 89036174738 nn@gmail.com"
re.findall(r'\d{1,2}[./]\d{1,2}[./]\d{2,4}', text) # \d - цифра . - любой символ

re.findall(r'\d{1,2}\D\d{1,2}\D\d{4}', text) # \D - любой символ, кроме цифры

for m in re.finditer(r'\d{1,2}[.]\d{1,2}[.]\d{2,4}', text): 
    print('Номер', m[0], 'начинается с позиции', m.start(), type(m), m)

"""Шаблон для выделения номера телефона"""

print(text)

re.findall(r'\d{11}', text) # находит первый объект

re.findall(r'\S{1,2}\d{10}', text) # \s - любой пробельный символ, \S - любой непробельный символ

re.findall(r'\S{1,3}\d{3}\S?\d{7}', text) # ? - символ может быть, а может и нет

for m in re.finditer(r'\S{1,3}\d{3}\S{0,1}\d{7}', text): 
    print('Номер', m[0], 'начинается с позиции', m.start())

"""Шаблон для выделения email"""

print(text)

re.findall(r'\S+[@]\S+', text)

re.findall(r'\b\S+@[a-zA-Z]\S+', text) # \b - граница слова

re.findall(r'\b\S+@[a-zA-Z]\S+[.]\S+', text) # \b - граница слова

for m in re.finditer(r'\b\S+@[a-zA-Z]\S+[.]\S+', text): 
    print('Номер', m[0], 'начинается с позиции', m.start())

"""**SUB**"""

print(text)

re.sub(r'\d{1,2}[./]\d{1,2}[./]\d{2,4}', 'DATA', text) # заменяем даты

re.sub(r'\d{1,2}\D\d{1,2}[.]\d{2,4}', r'', text) # заменяем все даты

"""**MATCH**"""

print(text)

telephone_numbers = ['8(903)6174741','+7(903)6174731','cnn@gmail.com','89036174739','+79036174740','89036174738', '+7903617473745','asd@mail.ru']

for i in range(len(telephone_numbers)):
  print(telephone_numbers[i], re.match(r'\S+[@][a-zA-Z]\S+[.]\S+', telephone_numbers[i]))

"""**EXAMPLE**"""

# удалить все знаки препинания
sentence = "A, very very; irregular_sentence"
sentence = re.sub(r'[^a-zA-Z]',' ', sentence)
sentence = re.sub('  ',' ', sentence)
print(sentence)

# удалить все знаки препинания
sentence = "A, very very; irregular_sentence"
sentence = re.sub(r'[^a-zA-Z]',' ', sentence)
sentence = re.sub(r'\s+',' ', sentence)
print(sentence)