# -*- coding: utf-8 -*-
"""NLP.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cbf1_xOOxgeoJt_xeY_Wyr7PhaQMQg9P
"""

import nltk

"""Simple tokenizer"""

mytweet = "@john lol that was #awesome :)"
nltk.word_tokenize(mytweet)

"""Special tokenizer"""

from nltk.tokenize import TweetTokenizer

tokenizer = TweetTokenizer()
tokenizer.tokenize(mytweet)

"""Multi-Word Expression Tokenizer"""

from nltk.tokenize import MWETokenizer

tokenizer = MWETokenizer([('a', 'little'), ('a', 'little', 'bit'), ('a', 'lot')])
tokenizer.add_mwe(('in', 'spite', 'of'))

tokenizer.tokenize('Testing testing testing one two three'.split())

tokenizer.tokenize('This is a test in spite of'.split())

tokenizer.tokenize('In a little or a little bit or a lot in spite of'.split())

"""Regular-Expression Tokenizers"""

from nltk.tokenize import RegexpTokenizer
s = "Good muffins cost $3.88\nin New York.  Please buy me\ntwo of them.\n\nThanks."
tokenizer = RegexpTokenizer('\w+')#'\w+|\$[\d\.]+|\S+'
tokenizer.tokenize(s)

"""Stemmers"""

import nltk
ps = nltk.stem.PorterStemmer()
print(ps.stem('grows'),ps.stem('leaves'),ps.stem('fairly'),ps.stem('provision'),ps.stem('owed') )

import nltk
sno = nltk.stem.SnowballStemmer('english')
print(sno.stem('grows'),sno.stem('russian'),
      sno.stem('leaves'),sno.stem('fairly'),sno.stem('provision'),sno.stem('owed') )

print(" ".join(sno.languages))

from nltk.stem.lancaster import LancasterStemmer
st = LancasterStemmer()
print(st.stem('grows'),st.stem('leaves'),st.stem('fairly'), st.stem('provision'),st.stem('owed') )

st_pre = LancasterStemmer(strip_prefix_flag=True)
st_pre.stem('kilometer') # Test Prefix

from nltk.stem.snowball import RussianStemmer

stemmer = RussianStemmer()
stemmer.stem('обучающиеся')

"""Lemmatization"""

import nltk
lemma = nltk.wordnet.WordNetLemmatizer()
print(lemma.lemmatize('article'),lemma.lemmatize('leaves'),lemma.lemmatize('fairly'))

print(lemma.lemmatize('grows'),lemma.lemmatize('russian'),
      lemma.lemmatize('leaves'),lemma.lemmatize('fairly'),lemma.lemmatize('provision'),lemma.lemmatize('owed'))

